name: Build and Test scala-utils

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: setup-scala
      # You may pin to the exact commit or the version.
      uses: olafurpg/setup-scala@a2db88fb5c57396fbc1ff29a4bb0420072a3d6d8
      # uses: olafurpg/setup-scala@v10
      with:
        java-version: adopt@1.11
    - name: Run tests+coverage and update env for badge
      run: |
        # ...
        # [info] Run completed in 574 milliseconds.
        # [info] Total number of tests run: 5
        # [info] Suites: completed 1, aborted 0
        # [info] Tests: succeeded 5, failed 0, canceled 0, ignored 0, pending 0
        # [info] All tests passed.
        # [success] Total time: 11 s, completed Aug 16, 2022, 4:02:09 PM

        TEST_OUTPUT="$(sbt clean coverage test)"
        echo "TEST_OUTPUT:"
        echo "$TEST_OUTPUT"

        SUMMARY=$(echo "$TEST_OUTPUT" | tail -1)
        echo "SUMMARY:"
        echo "$SUMMARY"
        TEST_RESULT=$(echo "$SUMMARY" | cut -d " " -f 1 | cut -b 2- | rev | cut -b 2- | rev)
        echo "REST_RESULT:"
        echo "$TEST_RESULT"
        echo "TEST_RESULT=$(echo ${TEST_RESULT})" >> $GITHUB_ENV
    - name: Generate coverage report and update env for badge
      run: |
        # ....
        # [info] Generating scoverage reports...
        # [info] Written Cobertura report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/coverage-report/cobertura.xml]
        # [info] Written XML coverage report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/scoverage-report/scoverage.xml]
        # [info] Written HTML coverage report [/home/runner/work/expression-parser/expression-parser/target/scala-2.13/scoverage-report/index.html]
        # [info] Statement coverage.: 90.70%
        # [info] Branch coverage....: 100.00%
        # [info] Coverage reports completed
        # [info] Coverage is above minimum [90.70% > 50.0%]
        # [info] All done. Coverage was [90.70%]
        # [success] Total time: 1 s, completed Aug 16, 2022, 11:23:18 AM

        COVERAGE_OUTPUT="$(sbt coverageReport)"
        echo "COVERAGE_OUTPUT:"
        echo "$COVERAGE_OUTPUT"

        SUMMARY=$(echo "$COVERAGE_OUTPUT" | tail -2 | head -1)
        echo "SUMMARY:"
        echo "$SUMMARY"
        COVERAGE=$(echo "$SUMMARY" | cut -d " " -f 6 | cut -b 2- | rev | cut -b 2- | rev)
        echo "COVERAGE:"
        echo "$COVERAGE"
        echo "COVERAGE=$(echo ${COVERAGE})" >> $GITHUB_ENV

        # var REF = 'refs/pull/27/merge.json';
        REF=${{ github.ref }}
        # console.log('github.ref: ' + REF);
        echo "github.ref: $REF"
        # var PATHS = REF.split('/');
        IFS='/' read -ra PATHS <<< "$REF"
        # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        # console.log(BRANCH_NAME); // 'pull_27'
        echo $BRANCH_NAME
        # process.env.BRANCH = 'pull_27';
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
    - name: Create the Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 2f297a650e2c9fea0b3b817691fada74
        filename: scala-utils__${{ env.BRANCH }}.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        color: green
        namedLogo: scoverage
    - name: Create the Test Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: d79f9f3049bf190b417943a2d3b21481
        filename: scala-utils__${{ env.BRANCH }}.json
        label: Tests
        message: ${{ env.TEST_RESULT }}
        color: green
        namedLogo: scalatest
